{
  "metadata": {
    "originalFilePath": "auth/login/page.tsx",
    "scannedDirectory": "app",
    "timestamp": "2025-06-29_13-47-06",
    "scanDate": "2025-06-29T11:47:06.505Z"
  },
  "analysis": {
    "defined": [
      "LoginPage",
      "handleOAuthLogin",
      "handleSubmit"
    ],
    "called": [
      "console.error",
      "e.preventDefault",
      "handleOAuthLogin",
      "router.push",
      "router.refresh",
      "setEmail",
      "setLoading",
      "setPassword",
      "supabase.signInWithOAuth",
      "supabase.signInWithPassword",
      "toast.error",
      "toast.success",
      "useRouter",
      "useState"
    ],
    "both": [
      "handleOAuthLogin"
    ],
    "imports": {
      "useState": {
        "source": "react",
        "type": "npm",
        "importedName": "useState",
        "localName": "useState"
      },
      "Button": {
        "source": "@/components/ui/button",
        "type": "alias",
        "importedName": "Button",
        "localName": "Button"
      },
      "Input": {
        "source": "@/components/ui/input",
        "type": "alias",
        "importedName": "Input",
        "localName": "Input"
      },
      "Card": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "Card",
        "localName": "Card"
      },
      "CardContent": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardContent",
        "localName": "CardContent"
      },
      "CardHeader": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardHeader",
        "localName": "CardHeader"
      },
      "CardTitle": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardTitle",
        "localName": "CardTitle"
      },
      "Separator": {
        "source": "@/components/ui/separator",
        "type": "alias",
        "importedName": "Separator",
        "localName": "Separator"
      },
      "Link": {
        "source": "next/link",
        "type": "npm",
        "importedName": "default",
        "localName": "Link"
      },
      "supabase": {
        "source": "@/lib/supabaseClient",
        "type": "alias",
        "importedName": "supabase",
        "localName": "supabase"
      },
      "useRouter": {
        "source": "next/navigation",
        "type": "npm",
        "importedName": "useRouter",
        "localName": "useRouter"
      },
      "toast": {
        "source": "sonner",
        "type": "npm",
        "importedName": "toast",
        "localName": "toast"
      },
      "AuthError": {
        "source": "@supabase/supabase-js",
        "type": "npm",
        "importedName": "AuthError",
        "localName": "AuthError"
      }
    },
    "calledWithImports": {
      "useState": {
        "source": "react",
        "type": "npm",
        "importedName": "useState",
        "localName": "useState"
      },
      "useRouter": {
        "source": "next/navigation",
        "type": "npm",
        "importedName": "useRouter",
        "localName": "useRouter"
      },
      "e.preventDefault": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "e",
        "functionName": "e.preventDefault",
        "fullMemberPath": "e.preventDefault",
        "methodChain": [
          "preventDefault"
        ],
        "isChainedCall": true
      },
      "setLoading": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setLoading"
      },
      "supabase.signInWithPassword": {
        "source": "@/lib/supabaseClient",
        "type": "alias",
        "importedName": "supabase",
        "localName": "supabase",
        "memberOf": "supabase",
        "functionName": "supabase.signInWithPassword",
        "fullMemberPath": "supabase.signInWithPassword",
        "methodChain": [
          "signInWithPassword"
        ],
        "isChainedCall": true
      },
      "toast.success": {
        "source": "sonner",
        "type": "npm",
        "importedName": "toast",
        "localName": "toast",
        "memberOf": "toast",
        "functionName": "toast.success",
        "fullMemberPath": "toast.success",
        "methodChain": [
          "success"
        ],
        "isChainedCall": true
      },
      "router.push": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "router",
        "functionName": "router.push",
        "fullMemberPath": "router.push",
        "methodChain": [
          "push"
        ],
        "isChainedCall": true
      },
      "router.refresh": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "router",
        "functionName": "router.refresh",
        "fullMemberPath": "router.refresh",
        "methodChain": [
          "refresh"
        ],
        "isChainedCall": true
      },
      "toast.error": {
        "source": "sonner",
        "type": "npm",
        "importedName": "toast",
        "localName": "toast",
        "memberOf": "toast",
        "functionName": "toast.error",
        "fullMemberPath": "toast.error",
        "methodChain": [
          "error"
        ],
        "isChainedCall": true
      },
      "console.error": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "console",
        "functionName": "console.error",
        "fullMemberPath": "console.error",
        "methodChain": [
          "error"
        ],
        "isChainedCall": true
      },
      "supabase.signInWithOAuth": {
        "source": "@/lib/supabaseClient",
        "type": "alias",
        "importedName": "supabase",
        "localName": "supabase",
        "memberOf": "supabase",
        "functionName": "supabase.signInWithOAuth",
        "fullMemberPath": "supabase.signInWithOAuth",
        "methodChain": [
          "signInWithOAuth"
        ],
        "isChainedCall": true
      },
      "handleOAuthLogin": {
        "source": "local",
        "type": "local",
        "importedName": "handleOAuthLogin",
        "localName": "handleOAuthLogin"
      },
      "setEmail": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setEmail"
      },
      "setPassword": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setPassword"
      }
    },
    "destructuredFunctions": {
      "email": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "email"
      },
      "setEmail": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setEmail"
      },
      "password": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "password"
      },
      "setPassword": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setPassword"
      },
      "loading": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "loading"
      },
      "setLoading": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setLoading"
      }
    }
  }
}