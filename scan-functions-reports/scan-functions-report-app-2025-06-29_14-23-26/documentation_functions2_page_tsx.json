{
  "metadata": {
    "originalFilePath": "documentation/functions2/page.tsx",
    "scannedDirectory": "app",
    "timestamp": "2025-06-29_14-23-26",
    "scanDate": "2025-06-29T12:23:26.790Z"
  },
  "analysis": {
    "defined": [
      "FunctionReportsPage",
      "fetchDirectories",
      "fetchDirectoryData",
      "formatJsonFileName",
      "formatTimestamp",
      "getGroupFileCount",
      "groupFilesByPath",
      "handleFileSelection",
      "isGroupCollapsed",
      "loadTableData",
      "toggleGroup",
      "toggleGroupSelection",
      "toggleJsonFilesCollapse",
      "toggleSelectAll"
    ],
    "called": [
      "Array.from",
      "Array.from.sort",
      "Object.keys",
      "Object.keys.sort",
      "Promise.all",
      "a.localeCompare",
      "collapsedGroups.has",
      "console.error",
      "data.analysis.forEach",
      "data.filter",
      "date.split",
      "dateObj.toLocaleString",
      "directories.map",
      "directoryData.summary.map",
      "fetch",
      "fetchDirectories",
      "fetchDirectoryData",
      "fileName.replace",
      "fileName.replace.replace.replace.replace.replace",
      "fileResults.forEach",
      "files.filter",
      "files.forEach",
      "formatJsonFileName",
      "formatTimestamp",
      "functionMap.get",
      "functionMap.has",
      "functionMap.set",
      "functionMap.values",
      "getGroupFileCount",
      "groupFiles.every",
      "groupFiles.forEach",
      "groupFiles.includes",
      "groupFiles.map",
      "groupFilesByPath",
      "groupNames.map",
      "groups.push",
      "handleFileSelection",
      "isGroupCollapsed",
      "newSelected.add",
      "newSet.add",
      "newSet.delete",
      "newSet.has",
      "parseInt",
      "prev.filter",
      "readableName.split",
      "response.json",
      "selectedJsonFiles.includes",
      "selectedJsonFiles.map",
      "setCollapsedGroups",
      "setDirectories",
      "setDirectoryData",
      "setError",
      "setIsJsonFilesCollapsed",
      "setLoading",
      "setLoadingTable",
      "setSelectedJsonFiles",
      "setTableData",
      "split.pop",
      "time.split",
      "timestamp.split",
      "toggleGroup",
      "toggleGroupSelection",
      "useEffect",
      "useState"
    ],
    "both": [
      "fetchDirectories",
      "fetchDirectoryData",
      "formatJsonFileName",
      "formatTimestamp",
      "getGroupFileCount",
      "groupFilesByPath",
      "handleFileSelection",
      "isGroupCollapsed",
      "toggleGroup",
      "toggleGroupSelection"
    ],
    "exportDefault": [
      "FunctionReportsPage"
    ],
    "imports": {
      "React": {
        "source": "react",
        "type": "npm",
        "importedName": "default",
        "localName": "React"
      },
      "useState": {
        "source": "react",
        "type": "npm",
        "importedName": "useState",
        "localName": "useState"
      },
      "useEffect": {
        "source": "react",
        "type": "npm",
        "importedName": "useEffect",
        "localName": "useEffect"
      },
      "Select": {
        "source": "@/components/ui/select",
        "type": "alias",
        "importedName": "Select",
        "localName": "Select"
      },
      "SelectContent": {
        "source": "@/components/ui/select",
        "type": "alias",
        "importedName": "SelectContent",
        "localName": "SelectContent"
      },
      "SelectItem": {
        "source": "@/components/ui/select",
        "type": "alias",
        "importedName": "SelectItem",
        "localName": "SelectItem"
      },
      "SelectTrigger": {
        "source": "@/components/ui/select",
        "type": "alias",
        "importedName": "SelectTrigger",
        "localName": "SelectTrigger"
      },
      "SelectValue": {
        "source": "@/components/ui/select",
        "type": "alias",
        "importedName": "SelectValue",
        "localName": "SelectValue"
      },
      "Card": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "Card",
        "localName": "Card"
      },
      "CardContent": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardContent",
        "localName": "CardContent"
      },
      "CardDescription": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardDescription",
        "localName": "CardDescription"
      },
      "CardHeader": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardHeader",
        "localName": "CardHeader"
      },
      "CardTitle": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardTitle",
        "localName": "CardTitle"
      },
      "Badge": {
        "source": "@/components/ui/badge",
        "type": "alias",
        "importedName": "Badge",
        "localName": "Badge"
      },
      "Checkbox": {
        "source": "@/components/ui/checkbox",
        "type": "alias",
        "importedName": "Checkbox",
        "localName": "Checkbox"
      },
      "Button": {
        "source": "@/components/ui/button",
        "type": "alias",
        "importedName": "Button",
        "localName": "Button"
      },
      "FileText": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "FileText",
        "localName": "FileText"
      },
      "Folder": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "Folder",
        "localName": "Folder"
      },
      "Calendar": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "Calendar",
        "localName": "Calendar"
      },
      "Hash": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "Hash",
        "localName": "Hash"
      },
      "Eye": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "Eye",
        "localName": "Eye"
      },
      "ChevronDown": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "ChevronDown",
        "localName": "ChevronDown"
      },
      "ChevronRight": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "ChevronRight",
        "localName": "ChevronRight"
      },
      "FunctionAnalysisTable": {
        "source": "@/components/ui/function-analysis-table",
        "type": "alias",
        "importedName": "default",
        "localName": "FunctionAnalysisTable"
      },
      "FunctionData": {
        "source": "@/types/function-reports",
        "type": "alias",
        "importedName": "FunctionData",
        "localName": "FunctionData"
      },
      "JsonFileData": {
        "source": "@/types/function-reports",
        "type": "alias",
        "importedName": "JsonFileData",
        "localName": "JsonFileData"
      },
      "ReportDirectory": {
        "source": "@/types/function-reports",
        "type": "alias",
        "importedName": "ReportDirectory",
        "localName": "ReportDirectory"
      },
      "DirectoryData": {
        "source": "@/types/function-reports",
        "type": "alias",
        "importedName": "DirectoryData",
        "localName": "DirectoryData"
      }
    },
    "calledWithImports": {
      "useState": {
        "source": "react",
        "type": "npm",
        "importedName": "useState",
        "localName": "useState"
      },
      "useEffect": {
        "source": "react",
        "type": "npm",
        "importedName": "useEffect",
        "localName": "useEffect"
      },
      "fetch": {
        "source": "unknown",
        "type": "unknown",
        "importedName": "fetch",
        "localName": "fetch"
      },
      "response.json": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "response",
        "functionName": "response.json",
        "fullMemberPath": "response.json",
        "methodChain": [
          "json"
        ],
        "isChainedCall": true
      },
      "data.filter": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "data",
        "functionName": "data.filter",
        "fullMemberPath": "data.filter",
        "methodChain": [
          "filter"
        ],
        "isChainedCall": true
      },
      "setDirectories": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setDirectories"
      },
      "setError": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setError"
      },
      "console.error": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "console",
        "functionName": "console.error",
        "fullMemberPath": "console.error",
        "methodChain": [
          "error"
        ],
        "isChainedCall": true
      },
      "fetchDirectories": {
        "source": "local",
        "type": "local",
        "importedName": "fetchDirectories",
        "localName": "fetchDirectories"
      },
      "setDirectoryData": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setDirectoryData"
      },
      "setLoading": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setLoading"
      },
      "fetchDirectoryData": {
        "source": "local",
        "type": "local",
        "importedName": "fetchDirectoryData",
        "localName": "fetchDirectoryData"
      },
      "timestamp.split": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "timestamp",
        "functionName": "timestamp.split",
        "fullMemberPath": "timestamp.split",
        "methodChain": [
          "split"
        ],
        "isChainedCall": true
      },
      "date.split": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "date",
        "functionName": "date.split",
        "fullMemberPath": "date.split",
        "methodChain": [
          "split"
        ],
        "isChainedCall": true
      },
      "time.split": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "time",
        "functionName": "time.split",
        "fullMemberPath": "time.split",
        "methodChain": [
          "split"
        ],
        "isChainedCall": true
      },
      "parseInt": {
        "source": "unknown",
        "type": "unknown",
        "importedName": "parseInt",
        "localName": "parseInt"
      },
      "dateObj.toLocaleString": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "dateObj",
        "functionName": "dateObj.toLocaleString",
        "fullMemberPath": "dateObj.toLocaleString",
        "methodChain": [
          "toLocaleString"
        ],
        "isChainedCall": true
      },
      "fileName.replace.replace.replace.replace.replace": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "fileName",
        "functionName": "fileName.replace.replace.replace.replace.replace",
        "fullMemberPath": "fileName.replace.replace.replace.replace.replace",
        "methodChain": [
          "replace",
          "replace",
          "replace",
          "replace",
          "replace"
        ],
        "isChainedCall": true
      },
      "files.forEach": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "files",
        "functionName": "files.forEach",
        "fullMemberPath": "files.forEach",
        "methodChain": [
          "forEach"
        ],
        "isChainedCall": true
      },
      "formatJsonFileName": {
        "source": "local",
        "type": "local",
        "importedName": "formatJsonFileName",
        "localName": "formatJsonFileName"
      },
      "readableName.split": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "readableName",
        "functionName": "readableName.split",
        "fullMemberPath": "readableName.split",
        "methodChain": [
          "split"
        ],
        "isChainedCall": true
      },
      "groups.push": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "groups",
        "functionName": "groups.push",
        "fullMemberPath": "groups.push",
        "methodChain": [
          "push"
        ],
        "isChainedCall": true
      },
      "setCollapsedGroups": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setCollapsedGroups"
      },
      "newSet.has": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "newSet",
        "functionName": "newSet.has",
        "fullMemberPath": "newSet.has",
        "methodChain": [
          "has"
        ],
        "isChainedCall": true
      },
      "newSet.delete": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "newSet",
        "functionName": "newSet.delete",
        "fullMemberPath": "newSet.delete",
        "methodChain": [
          "delete"
        ],
        "isChainedCall": true
      },
      "newSet.add": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "newSet",
        "functionName": "newSet.add",
        "fullMemberPath": "newSet.add",
        "methodChain": [
          "add"
        ],
        "isChainedCall": true
      },
      "collapsedGroups.has": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "collapsedGroups",
        "functionName": "collapsedGroups.has",
        "fullMemberPath": "collapsedGroups.has",
        "methodChain": [
          "has"
        ],
        "isChainedCall": true
      },
      "setIsJsonFilesCollapsed": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setIsJsonFilesCollapsed"
      },
      "files.filter": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "files",
        "functionName": "files.filter",
        "fullMemberPath": "files.filter",
        "methodChain": [
          "filter"
        ],
        "isChainedCall": true
      },
      "selectedJsonFiles.includes": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "selectedJsonFiles",
        "functionName": "selectedJsonFiles.includes",
        "fullMemberPath": "selectedJsonFiles.includes",
        "methodChain": [
          "includes"
        ],
        "isChainedCall": true
      },
      "groupFiles.every": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "groupFiles",
        "functionName": "groupFiles.every",
        "fullMemberPath": "groupFiles.every",
        "methodChain": [
          "every"
        ],
        "isChainedCall": true
      },
      "setSelectedJsonFiles": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setSelectedJsonFiles"
      },
      "prev.filter": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "prev",
        "functionName": "prev.filter",
        "fullMemberPath": "prev.filter",
        "methodChain": [
          "filter"
        ],
        "isChainedCall": true
      },
      "groupFiles.includes": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "groupFiles",
        "functionName": "groupFiles.includes",
        "fullMemberPath": "groupFiles.includes",
        "methodChain": [
          "includes"
        ],
        "isChainedCall": true
      },
      "groupFiles.forEach": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "groupFiles",
        "functionName": "groupFiles.forEach",
        "fullMemberPath": "groupFiles.forEach",
        "methodChain": [
          "forEach"
        ],
        "isChainedCall": true
      },
      "newSelected.add": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "newSelected",
        "functionName": "newSelected.add",
        "fullMemberPath": "newSelected.add",
        "methodChain": [
          "add"
        ],
        "isChainedCall": true
      },
      "Array.from": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "Array",
        "functionName": "Array.from",
        "fullMemberPath": "Array.from",
        "methodChain": [
          "from"
        ],
        "isChainedCall": true
      },
      "setLoadingTable": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setLoadingTable"
      },
      "selectedJsonFiles.map": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "selectedJsonFiles",
        "functionName": "selectedJsonFiles.map",
        "fullMemberPath": "selectedJsonFiles.map",
        "methodChain": [
          "map"
        ],
        "isChainedCall": true
      },
      "fileName.replace": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "fileName",
        "functionName": "fileName.replace",
        "fullMemberPath": "fileName.replace",
        "methodChain": [
          "replace"
        ],
        "isChainedCall": true
      },
      "Promise.all": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "Promise",
        "functionName": "Promise.all",
        "fullMemberPath": "Promise.all",
        "methodChain": [
          "all"
        ],
        "isChainedCall": true
      },
      "fileResults.forEach": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "fileResults",
        "functionName": "fileResults.forEach",
        "fullMemberPath": "fileResults.forEach",
        "methodChain": [
          "forEach"
        ],
        "isChainedCall": true
      },
      "data.analysis.forEach": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "data",
        "functionName": "data.analysis.forEach",
        "fullMemberPath": "data.analysis.forEach",
        "methodChain": [
          "analysis",
          "forEach"
        ],
        "isChainedCall": true
      },
      "functionMap.has": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "functionMap",
        "functionName": "functionMap.has",
        "fullMemberPath": "functionMap.has",
        "methodChain": [
          "has"
        ],
        "isChainedCall": true
      },
      "functionMap.set": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "functionMap",
        "functionName": "functionMap.set",
        "fullMemberPath": "functionMap.set",
        "methodChain": [
          "set"
        ],
        "isChainedCall": true
      },
      "functionMap.get": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "functionMap",
        "functionName": "functionMap.get",
        "fullMemberPath": "functionMap.get",
        "methodChain": [
          "get"
        ],
        "isChainedCall": true
      },
      "Array.from.sort": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "Array",
        "functionName": "Array.from.sort",
        "fullMemberPath": "Array.from.sort",
        "methodChain": [
          "from",
          "sort"
        ],
        "isChainedCall": true
      },
      "functionMap.values": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "functionMap",
        "functionName": "functionMap.values",
        "fullMemberPath": "functionMap.values",
        "methodChain": [
          "values"
        ],
        "isChainedCall": true
      },
      "a.localeCompare": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "a",
        "functionName": "a.localeCompare",
        "fullMemberPath": "a.localeCompare",
        "methodChain": [
          "localeCompare"
        ],
        "isChainedCall": true
      },
      "setTableData": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setTableData"
      },
      "groupFilesByPath": {
        "source": "local",
        "type": "local",
        "importedName": "groupFilesByPath",
        "localName": "groupFilesByPath"
      },
      "Object.keys": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "Object",
        "functionName": "Object.keys",
        "fullMemberPath": "Object.keys",
        "methodChain": [
          "keys"
        ],
        "isChainedCall": true
      },
      "directories.map": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "directories",
        "functionName": "directories.map",
        "fullMemberPath": "directories.map",
        "methodChain": [
          "map"
        ],
        "isChainedCall": true
      },
      "formatTimestamp": {
        "source": "local",
        "type": "local",
        "importedName": "formatTimestamp",
        "localName": "formatTimestamp"
      },
      "Object.keys.sort": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "Object",
        "functionName": "Object.keys.sort",
        "fullMemberPath": "Object.keys.sort",
        "methodChain": [
          "keys",
          "sort"
        ],
        "isChainedCall": true
      },
      "groupNames.map": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "groupNames",
        "functionName": "groupNames.map",
        "fullMemberPath": "groupNames.map",
        "methodChain": [
          "map"
        ],
        "isChainedCall": true
      },
      "isGroupCollapsed": {
        "source": "local",
        "type": "local",
        "importedName": "isGroupCollapsed",
        "localName": "isGroupCollapsed"
      },
      "getGroupFileCount": {
        "source": "local",
        "type": "local",
        "importedName": "getGroupFileCount",
        "localName": "getGroupFileCount"
      },
      "toggleGroup": {
        "source": "local",
        "type": "local",
        "importedName": "toggleGroup",
        "localName": "toggleGroup"
      },
      "toggleGroupSelection": {
        "source": "local",
        "type": "local",
        "importedName": "toggleGroupSelection",
        "localName": "toggleGroupSelection"
      },
      "groupFiles.map": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "groupFiles",
        "functionName": "groupFiles.map",
        "fullMemberPath": "groupFiles.map",
        "methodChain": [
          "map"
        ],
        "isChainedCall": true
      },
      "handleFileSelection": {
        "source": "local",
        "type": "local",
        "importedName": "handleFileSelection",
        "localName": "handleFileSelection"
      },
      "split.pop": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "unknown",
        "functionName": "split.pop",
        "fullMemberPath": "split.pop",
        "methodChain": [
          "split",
          "pop"
        ],
        "isChainedCall": true
      },
      "directoryData.summary.map": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "directoryData",
        "functionName": "directoryData.summary.map",
        "fullMemberPath": "directoryData.summary.map",
        "methodChain": [
          "summary",
          "map"
        ],
        "isChainedCall": true
      }
    },
    "destructuredFunctions": {
      "directories": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "directories"
      },
      "setDirectories": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setDirectories"
      },
      "selectedDirectory": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "selectedDirectory"
      },
      "setSelectedDirectory": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setSelectedDirectory"
      },
      "directoryData": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "directoryData"
      },
      "setDirectoryData": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setDirectoryData"
      },
      "selectedJsonFiles": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "selectedJsonFiles"
      },
      "setSelectedJsonFiles": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setSelectedJsonFiles"
      },
      "tableData": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "tableData"
      },
      "setTableData": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setTableData"
      },
      "loadingTable": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "loadingTable"
      },
      "setLoadingTable": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setLoadingTable"
      },
      "loading": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "loading"
      },
      "setLoading": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setLoading"
      },
      "error": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "error"
      },
      "setError": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setError"
      },
      "collapsedGroups": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "collapsedGroups"
      },
      "setCollapsedGroups": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setCollapsedGroups"
      },
      "isJsonFilesCollapsed": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "isJsonFilesCollapsed"
      },
      "setIsJsonFilesCollapsed": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setIsJsonFilesCollapsed"
      }
    }
  }
}