{
  "metadata": {
    "originalFilePath": "UpdateAggregatedButton.tsx",
    "scannedDirectory": "components",
    "timestamp": "2025-06-29_14-18-55",
    "scanDate": "2025-06-29T12:18:55.676Z"
  },
  "analysis": {
    "defined": [
      "UpdateAggregatedButton",
      "formatCurrency",
      "formatDate",
      "handleClose",
      "handleConfirmUpdate",
      "handleStartUpdate"
    ],
    "called": [
      "executeUpdate",
      "format",
      "formatCurrency",
      "formatDate",
      "getUpdatePreview",
      "preview.slice.map",
      "setError",
      "setIsDialogOpen",
      "setPreview",
      "setResult",
      "setState",
      "toLocaleDateString",
      "useState"
    ],
    "both": [
      "formatCurrency",
      "formatDate"
    ],
    "exportDefault": [
      "UpdateAggregatedButton"
    ],
    "imports": {
      "useState": {
        "source": "react",
        "type": "npm",
        "importedName": "useState",
        "localName": "useState"
      },
      "Button": {
        "source": "@/components/ui/button",
        "type": "alias",
        "importedName": "Button",
        "localName": "Button"
      },
      "Card": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "Card",
        "localName": "Card"
      },
      "CardContent": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardContent",
        "localName": "CardContent"
      },
      "CardDescription": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardDescription",
        "localName": "CardDescription"
      },
      "CardHeader": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardHeader",
        "localName": "CardHeader"
      },
      "CardTitle": {
        "source": "@/components/ui/card",
        "type": "alias",
        "importedName": "CardTitle",
        "localName": "CardTitle"
      },
      "Dialog": {
        "source": "@/components/ui/dialog",
        "type": "alias",
        "importedName": "Dialog",
        "localName": "Dialog"
      },
      "DialogContent": {
        "source": "@/components/ui/dialog",
        "type": "alias",
        "importedName": "DialogContent",
        "localName": "DialogContent"
      },
      "DialogHeader": {
        "source": "@/components/ui/dialog",
        "type": "alias",
        "importedName": "DialogHeader",
        "localName": "DialogHeader"
      },
      "DialogTitle": {
        "source": "@/components/ui/dialog",
        "type": "alias",
        "importedName": "DialogTitle",
        "localName": "DialogTitle"
      },
      "DialogDescription": {
        "source": "@/components/ui/dialog",
        "type": "alias",
        "importedName": "DialogDescription",
        "localName": "DialogDescription"
      },
      "getUpdatePreview": {
        "source": "@/app/actions/updateActions",
        "type": "alias",
        "importedName": "getUpdatePreview",
        "localName": "getUpdatePreview"
      },
      "executeUpdate": {
        "source": "@/app/actions/updateActions",
        "type": "alias",
        "importedName": "executeUpdate",
        "localName": "executeUpdate"
      },
      "UpdatePreview": {
        "source": "@/app/actions/updateActions",
        "type": "alias",
        "importedName": "UpdatePreview",
        "localName": "UpdatePreview"
      },
      "UpdateResult": {
        "source": "@/app/actions/updateActions",
        "type": "alias",
        "importedName": "UpdateResult",
        "localName": "UpdateResult"
      },
      "Loader2": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "Loader2",
        "localName": "Loader2"
      },
      "Plus": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "Plus",
        "localName": "Plus"
      },
      "CheckCircle": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "CheckCircle",
        "localName": "CheckCircle"
      },
      "XCircle": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "XCircle",
        "localName": "XCircle"
      },
      "AlertCircle": {
        "source": "lucide-react",
        "type": "npm",
        "importedName": "AlertCircle",
        "localName": "AlertCircle"
      }
    },
    "calledWithImports": {
      "useState": {
        "source": "react",
        "type": "npm",
        "importedName": "useState",
        "localName": "useState"
      },
      "setState": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setState"
      },
      "setError": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setError"
      },
      "setIsDialogOpen": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setIsDialogOpen"
      },
      "getUpdatePreview": {
        "source": "@/app/actions/updateActions",
        "type": "alias",
        "importedName": "getUpdatePreview",
        "localName": "getUpdatePreview"
      },
      "setPreview": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setPreview"
      },
      "executeUpdate": {
        "source": "@/app/actions/updateActions",
        "type": "alias",
        "importedName": "executeUpdate",
        "localName": "executeUpdate"
      },
      "setResult": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setResult"
      },
      "format": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "unknown",
        "functionName": "format",
        "fullMemberPath": "format"
      },
      "toLocaleDateString": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "unknown",
        "functionName": "toLocaleDateString",
        "fullMemberPath": "toLocaleDateString"
      },
      "formatCurrency": {
        "source": "local",
        "type": "local",
        "importedName": "formatCurrency",
        "localName": "formatCurrency"
      },
      "formatDate": {
        "source": "local",
        "type": "local",
        "importedName": "formatDate",
        "localName": "formatDate"
      },
      "preview.slice.map": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "preview",
        "functionName": "preview.slice.map",
        "fullMemberPath": "preview.slice.map",
        "methodChain": [
          "slice",
          "map"
        ],
        "isChainedCall": true
      }
    },
    "destructuredFunctions": {
      "state": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "state"
      },
      "setState": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setState"
      },
      "preview": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "preview"
      },
      "setPreview": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setPreview"
      },
      "result": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "result"
      },
      "setResult": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setResult"
      },
      "error": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "error"
      },
      "setError": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setError"
      },
      "isDialogOpen": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "isDialogOpen"
      },
      "setIsDialogOpen": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setIsDialogOpen"
      }
    }
  }
}