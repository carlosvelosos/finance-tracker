{
  "metadata": {
    "originalFilePath": "hooks/useTransactions.ts",
    "scannedDirectory": "lib",
    "timestamp": "2025-06-29_14-23-27",
    "scanDate": "2025-06-29T12:23:27.450Z"
  },
  "analysis": {
    "defined": [
      "adjustTransactionAmounts",
      "useAmexChartTransactions",
      "useAmexTransactions",
      "useFamilyTransactions",
      "useGlobalChartTransactions",
      "useGlobalTransactions",
      "useGlobalTransactionsWithProcessing",
      "useHandelsbankenCategoryChartTransactions",
      "useHandelsbankenChartTransactions",
      "useHandelsbankenOverviewChartTransactions",
      "useHandelsbankenTransactions",
      "useInAllTransactions",
      "useInterAccountCategoryChartTransactions",
      "useInterAccountOverviewChartTransactions",
      "useInterAccountTransactions",
      "useInterAccountTransactionsWithBankInfo",
      "useInterChartTransactions",
      "useInterTransactions",
      "useSjPrioChartTransactions",
      "useSjPrioTransactions",
      "useTransactions"
    ],
    "called": [
      "Boolean",
      "JSON.stringify",
      "Math.abs",
      "adjustTransactionAmounts",
      "adjustedTransactions.filter",
      "bankTransactions.reduce",
      "console.error",
      "console.log",
      "createClientComponentClient",
      "fetchAndProcessTransactions",
      "fetchTransactions",
      "loadTransactions",
      "rawTransactions.filter",
      "rawTransactions.map",
      "rawTransactions.map.filter",
      "setAmandaTransactions",
      "setBankInfo",
      "setError",
      "setLoading",
      "setMeTransactions",
      "setTransactions",
      "setUsTransactions",
      "setUser",
      "supabase.from.select",
      "supabase.getUser",
      "transactions.map",
      "uniqueBanks.forEach",
      "useAuth",
      "useCallback",
      "useEffect",
      "useGlobalTransactions",
      "useInterAccountTransactions",
      "useMemo",
      "useState",
      "useTransactions"
    ],
    "both": [
      "adjustTransactionAmounts",
      "useGlobalTransactions",
      "useInterAccountTransactions",
      "useTransactions"
    ],
    "exportDefault": [],
    "imports": {
      "useEffect": {
        "source": "react",
        "type": "npm",
        "importedName": "useEffect",
        "localName": "useEffect"
      },
      "useState": {
        "source": "react",
        "type": "npm",
        "importedName": "useState",
        "localName": "useState"
      },
      "useMemo": {
        "source": "react",
        "type": "npm",
        "importedName": "useMemo",
        "localName": "useMemo"
      },
      "useCallback": {
        "source": "react",
        "type": "npm",
        "importedName": "useCallback",
        "localName": "useCallback"
      },
      "useAuth": {
        "source": "../../context/AuthContext",
        "type": "relative",
        "importedName": "useAuth",
        "localName": "useAuth"
      },
      "fetchTransactions": {
        "source": "../utils/transactionFetchers",
        "type": "relative",
        "importedName": "fetchTransactions",
        "localName": "fetchTransactions"
      },
      "FetchTransactionsOptions": {
        "source": "../utils/transactionFetchers",
        "type": "relative",
        "importedName": "FetchTransactionsOptions",
        "localName": "FetchTransactionsOptions"
      },
      "Transaction": {
        "source": "@/types/transaction",
        "type": "alias",
        "importedName": "Transaction",
        "localName": "Transaction"
      },
      "createClientComponentClient": {
        "source": "@supabase/auth-helpers-nextjs",
        "type": "npm",
        "importedName": "createClientComponentClient",
        "localName": "createClientComponentClient"
      },
      "User": {
        "source": "@supabase/auth-helpers-nextjs",
        "type": "npm",
        "importedName": "User",
        "localName": "User"
      }
    },
    "calledWithImports": {
      "useAuth": {
        "source": "../../context/AuthContext",
        "type": "relative",
        "importedName": "useAuth",
        "localName": "useAuth"
      },
      "useState": {
        "source": "react",
        "type": "npm",
        "importedName": "useState",
        "localName": "useState"
      },
      "JSON.stringify": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "JSON",
        "functionName": "JSON.stringify",
        "fullMemberPath": "JSON.stringify",
        "methodChain": [
          "stringify"
        ],
        "isChainedCall": true
      },
      "useMemo": {
        "source": "react",
        "type": "npm",
        "importedName": "useMemo",
        "localName": "useMemo"
      },
      "useCallback": {
        "source": "react",
        "type": "npm",
        "importedName": "useCallback",
        "localName": "useCallback"
      },
      "setLoading": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setLoading"
      },
      "setError": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setError"
      },
      "fetchTransactions": {
        "source": "../utils/transactionFetchers",
        "type": "relative",
        "importedName": "fetchTransactions",
        "localName": "fetchTransactions"
      },
      "setTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setTransactions"
      },
      "useEffect": {
        "source": "react",
        "type": "npm",
        "importedName": "useEffect",
        "localName": "useEffect"
      },
      "loadTransactions": {
        "source": "unknown",
        "type": "unknown",
        "importedName": "loadTransactions",
        "localName": "loadTransactions"
      },
      "useTransactions": {
        "source": "local",
        "type": "local",
        "importedName": "useTransactions",
        "localName": "useTransactions"
      },
      "useGlobalTransactions": {
        "source": "local",
        "type": "local",
        "importedName": "useGlobalTransactions",
        "localName": "useGlobalTransactions"
      },
      "rawTransactions.map": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "rawTransactions",
        "functionName": "rawTransactions.map",
        "fullMemberPath": "rawTransactions.map",
        "methodChain": [
          "map"
        ],
        "isChainedCall": true
      },
      "useInterAccountTransactions": {
        "source": "local",
        "type": "local",
        "importedName": "useInterAccountTransactions",
        "localName": "useInterAccountTransactions"
      },
      "rawTransactions.map.filter": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "rawTransactions",
        "functionName": "rawTransactions.map.filter",
        "fullMemberPath": "rawTransactions.map.filter",
        "methodChain": [
          "map",
          "filter"
        ],
        "isChainedCall": true
      },
      "Boolean": {
        "source": "unknown",
        "type": "unknown",
        "importedName": "Boolean",
        "localName": "Boolean"
      },
      "uniqueBanks.forEach": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "uniqueBanks",
        "functionName": "uniqueBanks.forEach",
        "fullMemberPath": "uniqueBanks.forEach",
        "methodChain": [
          "forEach"
        ],
        "isChainedCall": true
      },
      "rawTransactions.filter": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "rawTransactions",
        "functionName": "rawTransactions.filter",
        "fullMemberPath": "rawTransactions.filter",
        "methodChain": [
          "filter"
        ],
        "isChainedCall": true
      },
      "bankTransactions.reduce": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "bankTransactions",
        "functionName": "bankTransactions.reduce",
        "fullMemberPath": "bankTransactions.reduce",
        "methodChain": [
          "reduce"
        ],
        "isChainedCall": true
      },
      "setBankInfo": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setBankInfo"
      },
      "createClientComponentClient": {
        "source": "@supabase/auth-helpers-nextjs",
        "type": "npm",
        "importedName": "createClientComponentClient",
        "localName": "createClientComponentClient"
      },
      "transactions.map": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "transactions",
        "functionName": "transactions.map",
        "fullMemberPath": "transactions.map",
        "methodChain": [
          "map"
        ],
        "isChainedCall": true
      },
      "Math.abs": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "Math",
        "functionName": "Math.abs",
        "fullMemberPath": "Math.abs",
        "methodChain": [
          "abs"
        ],
        "isChainedCall": true
      },
      "supabase.getUser": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "supabase",
        "functionName": "supabase.getUser",
        "fullMemberPath": "supabase.getUser",
        "methodChain": [
          "getUser"
        ],
        "isChainedCall": true
      },
      "setUser": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setUser"
      },
      "console.log": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "console",
        "functionName": "console.log",
        "fullMemberPath": "console.log",
        "methodChain": [
          "log"
        ],
        "isChainedCall": true
      },
      "supabase.from.select": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "supabase",
        "functionName": "supabase.from.select",
        "fullMemberPath": "supabase.from.select",
        "methodChain": [
          "from",
          "select"
        ],
        "isChainedCall": true
      },
      "adjustTransactionAmounts": {
        "source": "local",
        "type": "local",
        "importedName": "adjustTransactionAmounts",
        "localName": "adjustTransactionAmounts"
      },
      "setAmandaTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setAmandaTransactions"
      },
      "adjustedTransactions.filter": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "adjustedTransactions",
        "functionName": "adjustedTransactions.filter",
        "fullMemberPath": "adjustedTransactions.filter",
        "methodChain": [
          "filter"
        ],
        "isChainedCall": true
      },
      "setUsTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setUsTransactions"
      },
      "setMeTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setMeTransactions"
      },
      "console.error": {
        "source": "unknown",
        "type": "unknown",
        "memberOf": "console",
        "functionName": "console.error",
        "fullMemberPath": "console.error",
        "methodChain": [
          "error"
        ],
        "isChainedCall": true
      },
      "fetchAndProcessTransactions": {
        "source": "unknown",
        "type": "unknown",
        "importedName": "fetchAndProcessTransactions",
        "localName": "fetchAndProcessTransactions"
      }
    },
    "destructuredFunctions": {
      "transactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "transactions"
      },
      "setTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setTransactions"
      },
      "loading": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "loading"
      },
      "setLoading": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setLoading"
      },
      "error": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "error"
      },
      "setError": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setError"
      },
      "bankInfo": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "bankInfo"
      },
      "setBankInfo": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setBankInfo"
      },
      "amandaTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "amandaTransactions"
      },
      "setAmandaTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setAmandaTransactions"
      },
      "usTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "usTransactions"
      },
      "setUsTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setUsTransactions"
      },
      "meTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "meTransactions"
      },
      "setMeTransactions": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setMeTransactions"
      },
      "user": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 0,
        "isHookSetter": false,
        "importedName": "useState",
        "localName": "user"
      },
      "setUser": {
        "source": "react",
        "type": "npm",
        "hookName": "useState",
        "destructuredFrom": "useState",
        "destructuredIndex": 1,
        "isHookSetter": true,
        "importedName": "useState",
        "localName": "setUser"
      }
    }
  }
}